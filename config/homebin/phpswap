#!/bin/bash
#
# Allow users to easily switch between PHP versions using PHPBrew

if [ $# -ne 1 ]; then
 echo "Error:  Missing php version"
 echo "Usage:  phpswap PHP_VERSION"
 exit 1
fi

# Source the necessary files
export PHPBREW_ROOT=/opt/phpbrew
export PHPBREW_HOME=/opt/phpbrew
. /opt/phpbrew/bashrc

function brew_fpm_off {
	# Unfortunately it looks the the built in PHPBrew runner doesn't work with sudo so
	# we'll have to mimick the functionality
	PHPFPM_INUSE=`phpbrew list | sed -e "/\* /s/^\* php-//" | tr -d '[:space:]'`
	if [[ $PHPFPM_INUSE =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
		PHPFPM_PIDFILE=${PHPBREW_ROOT}/php/php-${PHPFPM_INUSE}/var/run/php-fpm.pid
		if [[ -e ${PHPFPM_PIDFILE} ]] ; then
			echo "Stopping phpbrew's php-fpm..."
			sudo kill $(cat ${PHPFPM_PIDFILE})
			sudo rm -f ${PHPFPM_PIDFILE}
		fi
	fi
}

# Allow users to turn PHPBrew off
if [[ $1 == "system" ]]; then
	brew_fpm_off
	phpbrew off
	sudo service php5-fpm stop > /dev/null 2>&1
	sudo service php5-fpm start
	echo "$(tput setaf 6)PHP switched back to system version. PHPBrew is off.$(tput sgr 0)"
	exit 0
fi

# Check for version number
if ! [[ $1 =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
	echo "$(tput setaf 1)Please enter a proper php version number$(tput sgr 0)"
	exit 1
fi

PHP_VER=$1
BREW_USE=`phpbrew use $PHP_VER | tr -cd [:print:]`
BREW_VERSION_AVAIL=`phpbrew list | grep $PHP_VER | wc -l`

# Check for faulty phpbrew config
if [[ $BREW_USE == *"should not see this"* ]]; then
	echo "$(tput setaf 1)ERROR: PHPBrew misconfigured$(tput sgr 0)"
	echo "$BREW_USE"
	exit 1
fi

function brew_fpm_on {
	# Unfortunately it looks the the built in PHPBrew runner doesn't work with sudo so
	# we'll have to mimick the functionality
	PHPFPM_BIN=${PHPBREW_ROOT}/php/php-${PHP_VER}/sbin/php-fpm
	PHPFPM_PIDFILE=${PHPBREW_ROOT}/php/php-${PHP_VER}/var/run/php-fpm.pid
	sudo ${PHPFPM_BIN} --php-ini ${PHPBREW_ROOT}/php/php-${PHP_VER}/etc/php.ini \
		--fpm-config ${PHPBREW_ROOT}/php/php-${PHP_VER}/etc/php-fpm.conf \
		--pid ${PHPFPM_PIDFILE}
	if [[ $? != "0" ]] ; then
		echo "php-fpm start failed."
	fi
}

# Make sure the version exists on the local system
if [[ $BREW_USE == *"not exists"* || $BREW_VERSION_AVAIL == 0 ]]; then
	# We need to install the new phpversion
	phpbrew update
	echo "$(tput setaf 6)PHP version $PHP_VER not installed. Building from source/installing... [this may take a few mintues]$(tput sgr 0)"
	VERSION_INSTALL=$(phpbrew install $PHP_VER +default +openssl +cgi +mb +mcrypt +mysql +pdo +gd +json +readline +fpm | tee /dev/tty)

	# Make sure the version was found within PHPBrew
	if [[ $VERSION_INSTALL == *"not found"* ]]; then
		echo "$(tput setaf 1)PHP Version $PHP_VER not found. Exiting.$(tput sgr 0)"
		exit 1
	fi
	# Yay, it was a valid version. Lets see if it installed/compiled correctly
	if [ "$?" != "0" ]; then
		echo "$(tput setaf 1)Install/compilation failed for php version $PHP_VER$(tput sgr 0)"
		exit 1
	fi

	# Make sure Ubuntu's php-fpm is stopped
	sudo service php5-fpm stop

	# Switch the PHP version
	phpbrew use $PHP_VER
	# Install extensions
	phpbrew ext install APC
	phpbrew ext install memcache
	phpbrew ext install xdebug stable
	phpbrew ext install imagick 

	# Make the config changes
	echo "$(tput setaf 6)Configuring the new version for VVV$(tput sgr 0)"
	PHPBREW_INSTALL=/opt/phpbrew/php/php-$PHP_VER
	PHPBREW_EXT=$PHPBREW_INSTALL/lib/php/extensions
	PHPBREW_EXT_SUBDIR=`ls $PHPBREW_EXT`
	if [[ -f $PHPBREW_INSTALL/etc/php.ini ]]; then
		# set mysql to be listening on the right socket
		sed -i '/\.default_socket/s/$/\/var\/run\/mysqld\/mysqld.sock/' $PHPBREW_INSTALL/etc/php.ini
		# set the correct php extensions directory
		sed -i -r -e 's@(extension_dir =)[^=]*$@\1 "'$PHPBREW_EXT/$PHPBREW_EXT_SUBDIR'"@' $PHPBREW_INSTALL/etc/php.ini
		sed -i -e "/; extension_dir = \"\/opt\/phpbrew/s/^; //" $PHPBREW_INSTALL/etc/php.ini
	fi
	if [[ -f $PHPBREW_INSTALL/etc/php-fpm.conf ]]; then
		# set php-fpm to be listening on the right socket
		sed -i 's@127.0.0.1:9000@/var/run/php5-fpm\.sock@g' $PHPBREW_INSTALL/etc/php-fpm.conf
		# set the user and group to correctly run
		sed -i 's@\(user = \).*@\1 www-data@' $PHPBREW_INSTALL/etc/php-fpm.conf
		sed -i 's@\(group = \).*@\1 vagrant@' $PHPBREW_INSTALL/etc/php-fpm.conf
		# and set the socket listener to correct user/group
		sed -i 's@\(owner = \).*@\1 www-data@' $PHPBREW_INSTALL/etc/php-fpm.conf
		# uncomment the listen owner, group, and mode
		sed -i -r "/;\s?listen\.(owner|group|mode)/s/^;//" $PHPBREW_INSTALL/etc/php-fpm.conf
	fi

	phpbrew use $PHP_VER
	sudo chown -R vagrant: /opt/phpbrew
else
	echo "$(tput setaf 6)PHPBrew version $PHP_VER already installed. Swapping versions.$(tput sgr 0)"
	phpbrew use $PHP_VER
fi

# Make sure the system php-fpm is stopped
sudo service php5-fpm stop > /dev/null 2>&1
#PHP_FMP_SOCK=`ss -pl | grep php5-fpm.sock | awk '{print $6}'`

# Enable extensions (excluding xdebug)
phpbrew ext enable APC
phpbrew ext enable memcache

# Restart phpbrew's fpm
echo "Restarting fpm so the changes take effect"
brew_fpm_off
BREW_FPM_START=$(brew_fpm_on | tee /dev/tty)

if ! [[ $BREW_FPM_START == *"failed"* ]]; then
	echo "$(tput setaf 2)PHP version swapped to $PHP_VER$(tput sgr 0)"
else
	echo "$(tput setaf 1)ERROR: There was a problem switching PHP versions$(tput sgr 0)"
fi